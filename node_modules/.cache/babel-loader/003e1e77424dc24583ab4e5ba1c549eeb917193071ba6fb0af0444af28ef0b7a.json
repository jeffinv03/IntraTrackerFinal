{"ast":null,"code":"var _jsxFileName = \"/Users/rheashah/Documents/IntraTrackerFinal/src/PreviousGames.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport './PreviousGames.css'; // Import a new CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PreviousGames() {\n  _s();\n  const navigate = useNavigate();\n  const savedGames = JSON.parse(localStorage.getItem('savedGames')) || [];\n  const goToHome = () => {\n    navigate('/');\n  };\n  const formatTime = time => {\n    const parts = time.split(':');\n    return parts[1] + ':' + parts[2]; // Remove the hour and display only minutes and seconds\n  };\n  const handleRemoveGame = index => {\n    // Logic to remove the game from the savedGames array\n    const updatedGames = [...savedGames];\n    updatedGames.splice(index, 1);\n    localStorage.setItem('savedGames', JSON.stringify(updatedGames));\n    // Update the component state if you are using a state to store the games\n    // Example: setSavedGames(updatedGames);\n    // Note: This example assumes that savedGames is a state variable.\n    // If savedGames is not a state variable, you might need to use a different approach.\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"previous-games\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-title\",\n      children: \"Previous Games\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"games-list\",\n      children: savedGames.map((game, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-entry\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: game.gameName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.entries(game.playerTimes).map(([name, time]) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [name, \": \", formatTime(time)]\n          }, name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: () => handleRemoveGame(index),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: goToHome,\n      className: \"mt-3 pg-home-button\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(PreviousGames, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = PreviousGames;\nexport default PreviousGames;\nvar _c;\n$RefreshReg$(_c, \"PreviousGames\");","map":{"version":3,"names":["React","useNavigate","Button","jsxDEV","_jsxDEV","PreviousGames","_s","navigate","savedGames","JSON","parse","localStorage","getItem","goToHome","formatTime","time","parts","split","handleRemoveGame","index","updatedGames","splice","setItem","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","game","gameName","Object","entries","playerTimes","name","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/rheashah/Documents/IntraTrackerFinal/src/PreviousGames.js"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport './PreviousGames.css';  // Import a new CSS file for styling\n\nfunction PreviousGames() {\n  const navigate = useNavigate();\n  const savedGames = JSON.parse(localStorage.getItem('savedGames')) || [];\n\n  const goToHome = () => {\n    navigate('/');\n  };\n\n  const formatTime = (time) => {\n    const parts = time.split(':');\n    return parts[1] + ':' + parts[2];  // Remove the hour and display only minutes and seconds\n  };\n\n  const handleRemoveGame = (index) => {\n    // Logic to remove the game from the savedGames array\n    const updatedGames = [...savedGames];\n    updatedGames.splice(index, 1);\n    localStorage.setItem('savedGames', JSON.stringify(updatedGames));\n    // Update the component state if you are using a state to store the games\n    // Example: setSavedGames(updatedGames);\n    // Note: This example assumes that savedGames is a state variable.\n    // If savedGames is not a state variable, you might need to use a different approach.\n  };\n\n  return (\n    <div className=\"previous-games\">\n     <h1 className=\"page-title\">Previous Games</h1>\n      <div className=\"games-list\">\n        {savedGames.map((game, index) => (\n          <div key={index} className=\"game-entry\">\n            <h3>{game.gameName}</h3>\n            <ul>\n              {Object.entries(game.playerTimes).map(([name, time]) => (\n                <li key={name}>{name}: {formatTime(time)}</li>\n              ))}\n            </ul>\n            <Button variant=\"danger\" onClick={() => handleRemoveGame(index)}>Remove</Button>\n          </div>\n        ))}\n      </div>\n      <Button onClick={goToHome} className=\"mt-3 pg-home-button\">Home</Button>\n    </div>\n  );\n}\n\nexport default PreviousGames;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}