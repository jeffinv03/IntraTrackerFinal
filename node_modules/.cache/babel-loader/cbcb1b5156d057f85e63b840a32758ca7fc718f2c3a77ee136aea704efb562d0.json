{"ast":null,"code":"var _jsxFileName = \"/Users/jeffinvarghese/Desktop/IntraTracker/src/PickTeam.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { useGame } from './GameContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PickTeam() {\n  _s();\n  const {\n    team,\n    setGameTeam\n  } = useGame(); // Assuming setGameTeam is a method to set the current game team in context\n  const [selectedPlayers, setSelectedPlayers] = useState([]);\n  const navigate = useNavigate();\n  const handleSelectPlayer = player => {\n    const isAlreadySelected = selectedPlayers.includes(player);\n    if (isAlreadySelected) {\n      setSelectedPlayers(selectedPlayers.filter(p => p !== player));\n    } else {\n      setSelectedPlayers([...selectedPlayers, player]);\n    }\n  };\n  const handleStartGame = () => {\n    setGameTeam(selectedPlayers);\n    navigate('/timer');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pick-team\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Select Players for the Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), team.map(player => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: selectedPlayers.includes(player),\n        onChange: () => handleSelectPlayer(player)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), player.name]\n    }, player.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleStartGame,\n      className: \"mt-3\",\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(PickTeam, \"az8n9E5YkeISM3IuIq4+xzhj+P8=\", false, function () {\n  return [useGame, useNavigate];\n});\n_c = PickTeam;\nexport default PickTeam;\nvar _c;\n$RefreshReg$(_c, \"PickTeam\");","map":{"version":3,"names":["React","useState","Button","useNavigate","useGame","jsxDEV","_jsxDEV","PickTeam","_s","team","setGameTeam","selectedPlayers","setSelectedPlayers","navigate","handleSelectPlayer","player","isAlreadySelected","includes","filter","p","handleStartGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","checked","onChange","name","onClick","_c","$RefreshReg$"],"sources":["/Users/jeffinvarghese/Desktop/IntraTracker/src/PickTeam.js"],"sourcesContent":["import React, { useState} from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { useGame } from './GameContext';\n\nfunction PickTeam() {\n  const { team, setGameTeam } = useGame(); // Assuming setGameTeam is a method to set the current game team in context\n  const [selectedPlayers, setSelectedPlayers] = useState([]);\n  const navigate = useNavigate();\n\n  const handleSelectPlayer = (player) => {\n    const isAlreadySelected = selectedPlayers.includes(player);\n    if (isAlreadySelected) {\n      setSelectedPlayers(selectedPlayers.filter(p => p !== player));\n    } else {\n      setSelectedPlayers([...selectedPlayers, player]);\n    }\n  };\n\n  const handleStartGame = () => {\n    setGameTeam(selectedPlayers);\n    navigate('/timer');\n  };\n\n  return (\n    <div className=\"pick-team\">\n      <h1>Select Players for the Game</h1>\n      {team.map(player => (\n        <div key={player.name}>\n          <input\n            type=\"checkbox\"\n            checked={selectedPlayers.includes(player)}\n            onChange={() => handleSelectPlayer(player)}\n          />\n          {player.name}\n        </div>\n      ))}\n      <Button onClick={handleStartGame} className=\"mt-3\">Start Game</Button>\n    </div>\n  );\n}\n\nexport default PickTeam;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAO,OAAO;AACtC,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM;IAAEC,IAAI;IAAEC;EAAY,CAAC,GAAGN,OAAO,CAAC,CAAC,CAAC,CAAC;EACzC,MAAM,CAACO,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAMY,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,kBAAkB,GAAIC,MAAM,IAAK;IACrC,MAAMC,iBAAiB,GAAGL,eAAe,CAACM,QAAQ,CAACF,MAAM,CAAC;IAC1D,IAAIC,iBAAiB,EAAE;MACrBJ,kBAAkB,CAACD,eAAe,CAACO,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKJ,MAAM,CAAC,CAAC;IAC/D,CAAC,MAAM;MACLH,kBAAkB,CAAC,CAAC,GAAGD,eAAe,EAAEI,MAAM,CAAC,CAAC;IAClD;EACF,CAAC;EAED,MAAMK,eAAe,GAAGA,CAAA,KAAM;IAC5BV,WAAW,CAACC,eAAe,CAAC;IAC5BE,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEP,OAAA;IAAKe,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBhB,OAAA;MAAAgB,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnCjB,IAAI,CAACkB,GAAG,CAACZ,MAAM,iBACdT,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QACEsB,IAAI,EAAC,UAAU;QACfC,OAAO,EAAElB,eAAe,CAACM,QAAQ,CAACF,MAAM,CAAE;QAC1Ce,QAAQ,EAAEA,CAAA,KAAMhB,kBAAkB,CAACC,MAAM;MAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,EACDX,MAAM,CAACgB,IAAI;IAAA,GANJhB,MAAM,CAACgB,IAAI;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOhB,CACN,CAAC,eACFpB,OAAA,CAACJ,MAAM;MAAC8B,OAAO,EAAEZ,eAAgB;MAACC,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnE,CAAC;AAEV;AAAClB,EAAA,CAnCQD,QAAQ;EAAA,QACeH,OAAO,EAEpBD,WAAW;AAAA;AAAA8B,EAAA,GAHrB1B,QAAQ;AAqCjB,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}