{"ast":null,"code":"var _jsxFileName = \"/Users/jeffinvarghese/Desktop/IntraTracker/src/Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { useGame } from './GameContext';\nimport \"./Timer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerClock = ({\n  player,\n  timer,\n  toggleTimer\n}) => {\n  const initials = `${player.name.charAt(0)}${player.lastName ? player.lastName.charAt(0) : ''}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-clock\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: `name circle ${timer.isActive ? 'active' : 'inactive'}`,\n      children: initials\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: new Date(timer.seconds * 1000).toISOString().substr(11, 8)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: timer.isActive ? 'danger' : 'success',\n      onClick: () => toggleTimer(player.name),\n      children: timer.isActive ? 'Pause' : 'Start'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = PlayerClock;\nfunction Timer() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    gameTeam\n  } = useGame();\n  const [timers, setTimers] = useState(gameTeam.reduce((acc, player) => ({\n    ...acc,\n    [player.name]: {\n      seconds: 0,\n      isActive: false\n    }\n  }), {}));\n  const [gameClock, setGameClock] = useState({\n    seconds: 0,\n    isActive: false\n  });\n  useEffect(() => {\n    const handleBeforeUnload = event => {\n      event.preventDefault();\n      event.returnValue = \"Are you sure you want to leave? Timer will stop and you will lose your progress!\";\n    };\n    if (gameClock.isActive) {\n      window.addEventListener('beforeunload', handleBeforeUnload);\n    }\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [gameClock.isActive]); // Only re-run the effect if gameClock.isActive changes\n\n  const toggleGameClock = () => {\n    setGameClock(prevGameClock => ({\n      ...prevGameClock,\n      isActive: !prevGameClock.isActive\n    }));\n  };\n  const toggleTimer = playerName => {\n    if (!gameClock.isActive) {\n      alert(\"Game Clock is Paused, Start game clock to start Player Timer!\");\n      return;\n    }\n    setTimers(prevTimers => {\n      const isActive = !prevTimers[playerName].isActive;\n      const newTimers = {\n        ...prevTimers,\n        [playerName]: {\n          ...prevTimers[playerName],\n          isActive\n        }\n      };\n      return newTimers;\n    });\n  };\n  useEffect(() => {\n    const handleBeforeUnload = event => {\n      event.preventDefault();\n      event.returnValue = 'Are you sure you want to leave? Timer will stop and you will lose your progress!';\n    };\n    if (gameClock.isActive) {\n      window.addEventListener('beforeunload', handleBeforeUnload);\n    }\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [gameClock.isActive]); // Dependency array ensures this effect runs only when gameClock.isActive changes\n\n  const endGame = () => {\n    const playerTimesForStorage = {};\n    Object.keys(timers).forEach(playerName => {\n      const timeString = new Date(timers[playerName].seconds * 1000).toISOString().substr(11, 8);\n      playerTimesForStorage[playerName] = timeString;\n    });\n    localStorage.setItem('playerTimes', JSON.stringify(playerTimesForStorage));\n    navigate('/endGame');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-clock\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: new Date(gameClock.seconds * 1000).toISOString().substr(11, 8)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"eg-btn\",\n          variant: gameClock.isActive ? 'danger' : 'success',\n          onClick: toggleGameClock,\n          children: gameClock.isActive ? 'Pause Game' : 'Start Game'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"page-title text-center\",\n      children: \"Player Times:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: gameTeam.map(player => /*#__PURE__*/_jsxDEV(PlayerClock, {\n        player: player,\n        timer: timers[player.name],\n        toggleTimer: toggleTimer\n      }, player.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"warning\",\n      onClick: endGame,\n      className: \"mt-3 pg-home-button eg-btn\",\n      children: \"End Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(Timer, \"S3UqPfpyD2IRBPr53aV06U63sSw=\", false, function () {\n  return [useNavigate, useGame];\n});\n_c2 = Timer;\nexport default Timer;\nvar _c, _c2;\n$RefreshReg$(_c, \"PlayerClock\");\n$RefreshReg$(_c2, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","Button","useNavigate","useGame","jsxDEV","_jsxDEV","PlayerClock","player","timer","toggleTimer","initials","name","charAt","lastName","className","children","isActive","fileName","_jsxFileName","lineNumber","columnNumber","Date","seconds","toISOString","substr","variant","onClick","_c","Timer","_s","navigate","gameTeam","timers","setTimers","reduce","acc","gameClock","setGameClock","handleBeforeUnload","event","preventDefault","returnValue","window","addEventListener","removeEventListener","toggleGameClock","prevGameClock","playerName","alert","prevTimers","newTimers","endGame","playerTimesForStorage","Object","keys","forEach","timeString","localStorage","setItem","JSON","stringify","map","_c2","$RefreshReg$"],"sources":["/Users/jeffinvarghese/Desktop/IntraTracker/src/Timer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { useGame } from './GameContext';\n\nimport \"./Timer.css\";\n\nconst PlayerClock = ({ player, timer, toggleTimer }) => {\n  const initials = `${player.name.charAt(0)}${player.lastName ? player.lastName.charAt(0) : ''}`;\n  return (\n    <div className=\"player-clock\">\n      <h3 className={`name circle ${timer.isActive ? 'active' : 'inactive'}`}>{initials}</h3>\n      <h3>{new Date(timer.seconds * 1000).toISOString().substr(11, 8)}</h3>\n      <Button variant={timer.isActive ? 'danger' : 'success'} onClick={() => toggleTimer(player.name)}>\n        {timer.isActive ? 'Pause' : 'Start'}\n      </Button>\n    </div>\n  );\n};\n\nfunction Timer() {\n  const navigate = useNavigate();\n  const { gameTeam } = useGame();\n  const [timers, setTimers] = useState(\n    gameTeam.reduce((acc, player) => ({ ...acc, [player.name]: { seconds: 0, isActive: false } }), {})\n  );\n  const [gameClock, setGameClock] = useState({ seconds: 0, isActive: false });\n\n  useEffect(() => {\n    const handleBeforeUnload = (event) => {\n      event.preventDefault();\n      event.returnValue = \"Are you sure you want to leave? Timer will stop and you will lose your progress!\";\n    };\n\n    if (gameClock.isActive) {\n      window.addEventListener('beforeunload', handleBeforeUnload);\n    }\n\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [gameClock.isActive]);  // Only re-run the effect if gameClock.isActive changes\n\n  const toggleGameClock = () => {\n    setGameClock(prevGameClock => ({\n      ...prevGameClock,\n      isActive: !prevGameClock.isActive\n    }));\n  };\n\n\n  const toggleTimer = (playerName) => {\n    if (!gameClock.isActive) {\n      alert(\"Game Clock is Paused, Start game clock to start Player Timer!\");\n      return;\n    }\n    setTimers(prevTimers => {\n      const isActive = !prevTimers[playerName].isActive;\n      const newTimers = {\n        ...prevTimers,\n        [playerName]: { ...prevTimers[playerName], isActive }\n      };\n      return newTimers;\n    });\n  };\n\n  useEffect(() => {\n    const handleBeforeUnload = (event) => {\n      event.preventDefault();\n      event.returnValue = 'Are you sure you want to leave? Timer will stop and you will lose your progress!';\n    };\n  \n    if (gameClock.isActive) {\n      window.addEventListener('beforeunload', handleBeforeUnload);\n    }\n  \n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [gameClock.isActive]);  // Dependency array ensures this effect runs only when gameClock.isActive changes\n  \n\n  const endGame = () => {\n    const playerTimesForStorage = {};\n    Object.keys(timers).forEach(playerName => {\n      const timeString = new Date(timers[playerName].seconds * 1000).toISOString().substr(11, 8);\n      playerTimesForStorage[playerName] = timeString;\n    });\n    localStorage.setItem('playerTimes', JSON.stringify(playerTimesForStorage));\n    navigate('/endGame');\n  };\n\n  return (\n    <div className=\"timer\">\n      <div className=\"timer-container\">\n        <div className=\"game-clock\">\n          <h3>{new Date(gameClock.seconds * 1000).toISOString().substr(11, 8)}</h3>\n          <Button className=\"eg-btn\" variant={gameClock.isActive ? 'danger' : 'success'} onClick={toggleGameClock}>\n            {gameClock.isActive ? 'Pause Game' : 'Start Game'}\n          </Button>\n        </div>\n      </div>\n      <h3 className=\"page-title text-center\">Player Times:</h3>\n      <div>\n        {gameTeam.map(player => (\n          <PlayerClock key={player.name} player={player} timer={timers[player.name]} toggleTimer={toggleTimer} />\n        ))}\n      </div>\n      <Button variant=\"warning\" onClick={endGame} className=\"mt-3 pg-home-button eg-btn\">End Game</Button>\n    </div>\n  );\n}\n\nexport default Timer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}