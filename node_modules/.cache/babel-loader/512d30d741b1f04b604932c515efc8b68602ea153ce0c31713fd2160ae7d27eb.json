{"ast":null,"code":"var _jsxFileName = \"/Users/jeffinvarghese/Desktop/IntraTracker/src/EditTime.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { Button, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditTime() {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [times, setTimes] = useState(location.state.playerTimes);\n  const handleTimeChange = (name, newTime) => {\n    setTimes(prevTimes => ({\n      ...prevTimes,\n      [name]: newTime\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault(); // Prevent default form submission behavior\n\n    // Assuming the saved game is identified uniquely somehow, e.g., by a timestamp or ID passed via state:\n    const gameId = location.state.gameId;\n\n    // Load the saved games from localStorage\n    let savedGames = JSON.parse(localStorage.getItem('savedGames')) || [];\n\n    // Find the specific game using gameId and update it\n    const updatedGames = savedGames.map(game => {\n      if (game.id === gameId) {\n        return {\n          ...game,\n          playerTimes: times\n        };\n      }\n      return game;\n    });\n\n    // Save the updated games list back to localStorage\n    localStorage.setItem('savedGames', JSON.stringify(updatedGames));\n    alert(\"Changes saved successfully!\");\n    navigate('/previous-games'); // Navigate to the Previous Games page or wherever appropriate\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-time\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Player Times\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [Object.entries(times).map(([name, time]) => /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [name, \"'s Time:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          defaultValue: time,\n          onChange: e => handleTimeChange(name, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"secondary\",\n      onClick: () => navigate(-1),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(EditTime, \"rOVTd/MaBOOrz40+tew8T0hB4Pg=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = EditTime;\nexport default EditTime;\nvar _c;\n$RefreshReg$(_c, \"EditTime\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","Button","Form","jsxDEV","_jsxDEV","EditTime","_s","navigate","location","times","setTimes","state","playerTimes","handleTimeChange","name","newTime","prevTimes","handleSubmit","e","preventDefault","gameId","savedGames","JSON","parse","localStorage","getItem","updatedGames","map","game","id","setItem","stringify","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Object","entries","time","Group","Label","Control","type","defaultValue","onChange","target","value","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/jeffinvarghese/Desktop/IntraTracker/src/EditTime.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { Button, Form } from 'react-bootstrap';\n\nfunction EditTime() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [times, setTimes] = useState(location.state.playerTimes);\n\n  const handleTimeChange = (name, newTime) => {\n    setTimes(prevTimes => ({ ...prevTimes, [name]: newTime }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault(); // Prevent default form submission behavior\n  \n    // Assuming the saved game is identified uniquely somehow, e.g., by a timestamp or ID passed via state:\n    const gameId = location.state.gameId;\n  \n    // Load the saved games from localStorage\n    let savedGames = JSON.parse(localStorage.getItem('savedGames')) || [];\n  \n    // Find the specific game using gameId and update it\n    const updatedGames = savedGames.map(game => {\n      if (game.id === gameId) {\n        return { ...game, playerTimes: times };\n      }\n      return game;\n    });\n  \n    // Save the updated games list back to localStorage\n    localStorage.setItem('savedGames', JSON.stringify(updatedGames));\n  \n    alert(\"Changes saved successfully!\");\n    navigate('/previous-games'); // Navigate to the Previous Games page or wherever appropriate\n  };\n  \n\n  return (\n    <div className=\"edit-time\">\n      <h2>Edit Player Times</h2>\n      <Form onSubmit={handleSubmit}>\n        {Object.entries(times).map(([name, time]) => (\n          <Form.Group key={name} className=\"mb-3\">\n            <Form.Label>{name}'s Time:</Form.Label>\n            <Form.Control\n              type=\"text\"\n              defaultValue={time}\n              onChange={(e) => handleTimeChange(name, e.target.value)}\n            />\n          </Form.Group>\n        ))}\n        <Button type=\"submit\" variant=\"primary\">Save Changes</Button>\n      </Form>\n      <Button variant=\"secondary\" onClick={() => navigate(-1)}>Back</Button>\n    </div>\n  );\n}\n\nexport default EditTime;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAACU,QAAQ,CAACG,KAAK,CAACC,WAAW,CAAC;EAE9D,MAAMC,gBAAgB,GAAGA,CAACC,IAAI,EAAEC,OAAO,KAAK;IAC1CL,QAAQ,CAACM,SAAS,KAAK;MAAE,GAAGA,SAAS;MAAE,CAACF,IAAI,GAAGC;IAAQ,CAAC,CAAC,CAAC;EAC5D,CAAC;EAED,MAAME,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;;IAEpB;IACA,MAAMC,MAAM,GAAGZ,QAAQ,CAACG,KAAK,CAACS,MAAM;;IAEpC;IACA,IAAIC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE;;IAErE;IACA,MAAMC,YAAY,GAAGL,UAAU,CAACM,GAAG,CAACC,IAAI,IAAI;MAC1C,IAAIA,IAAI,CAACC,EAAE,KAAKT,MAAM,EAAE;QACtB,OAAO;UAAE,GAAGQ,IAAI;UAAEhB,WAAW,EAAEH;QAAM,CAAC;MACxC;MACA,OAAOmB,IAAI;IACb,CAAC,CAAC;;IAEF;IACAJ,YAAY,CAACM,OAAO,CAAC,YAAY,EAAER,IAAI,CAACS,SAAS,CAACL,YAAY,CAAC,CAAC;IAEhEM,KAAK,CAAC,6BAA6B,CAAC;IACpCzB,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAC;EAC/B,CAAC;EAGD,oBACEH,OAAA;IAAK6B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB9B,OAAA;MAAA8B,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BlC,OAAA,CAACF,IAAI;MAACqC,QAAQ,EAAEtB,YAAa;MAAAiB,QAAA,GAC1BM,MAAM,CAACC,OAAO,CAAChC,KAAK,CAAC,CAACkB,GAAG,CAAC,CAAC,CAACb,IAAI,EAAE4B,IAAI,CAAC,kBACtCtC,OAAA,CAACF,IAAI,CAACyC,KAAK;QAAYV,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACrC9B,OAAA,CAACF,IAAI,CAAC0C,KAAK;UAAAV,QAAA,GAAEpB,IAAI,EAAC,UAAQ;QAAA;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACvClC,OAAA,CAACF,IAAI,CAAC2C,OAAO;UACXC,IAAI,EAAC,MAAM;UACXC,YAAY,EAAEL,IAAK;UACnBM,QAAQ,EAAG9B,CAAC,IAAKL,gBAAgB,CAACC,IAAI,EAAEI,CAAC,CAAC+B,MAAM,CAACC,KAAK;QAAE;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzD,CAAC;MAAA,GANaxB,IAAI;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOT,CACb,CAAC,eACFlC,OAAA,CAACH,MAAM;QAAC6C,IAAI,EAAC,QAAQ;QAACK,OAAO,EAAC,SAAS;QAAAjB,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,eACPlC,OAAA,CAACH,MAAM;MAACkD,OAAO,EAAC,WAAW;MAACC,OAAO,EAAEA,CAAA,KAAM7C,QAAQ,CAAC,CAAC,CAAC,CAAE;MAAA2B,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnE,CAAC;AAEV;AAAChC,EAAA,CArDQD,QAAQ;EAAA,QACEN,WAAW,EACXC,WAAW;AAAA;AAAAqD,EAAA,GAFrBhD,QAAQ;AAuDjB,eAAeA,QAAQ;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}