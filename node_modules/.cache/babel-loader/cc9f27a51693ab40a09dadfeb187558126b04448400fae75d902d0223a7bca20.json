{"ast":null,"code":"var _jsxFileName = \"/Users/jeffinvarghese/Desktop/IntraTracker/src/Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport \"./Timer.css\";\nimport { useNavigate } from 'react-router-dom';\nimport { useGame } from './GameContext'; // Import useGame from GameContext\n\n// Timer component to display all players' clocks\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Timer() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    team\n  } = useGame(); // Use the useGame hook to get the team data\n\n  const [timers, setTimers] = useState(team.reduce((acc, player) => {\n    // Initialize timers with the team from context\n    acc[player.name] = {\n      seconds: 0,\n      isActive: false\n    };\n    return acc;\n  }, {}));\n  const toggleTimer = playerName => {\n    setTimers(prevTimers => {\n      const isActive = !prevTimers[playerName].isActive;\n      const newTimers = {\n        ...prevTimers,\n        [playerName]: {\n          ...prevTimers[playerName],\n          isActive\n        }\n      };\n      return newTimers;\n    });\n  };\n  useEffect(() => {\n    const activeTimers = Object.entries(timers).filter(([, timer]) => timer.isActive);\n    if (activeTimers.length === 0) return;\n    const interval = setInterval(() => {\n      setTimers(prevTimers => {\n        const newTimers = {\n          ...prevTimers\n        };\n        activeTimers.forEach(([playerName]) => {\n          newTimers[playerName].seconds += 1;\n        });\n        return newTimers;\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [timers]);\n  const endGame = () => {\n    // Save the times to localStorage\n    const playerTimesForStorage = {};\n    Object.keys(timers).forEach(playerName => {\n      const timeString = new Date(timers[playerName].seconds * 1000).toISOString().substr(11, 8);\n      playerTimesForStorage[playerName] = timeString;\n    });\n    localStorage.setItem('playerTimes', JSON.stringify(playerTimesForStorage));\n    navigate('/endGame');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer\",\n    children: [team.map(player =>\n    /*#__PURE__*/\n    // Render player clocks based on the team from context\n    _jsxDEV(PlayerClock, {\n      player: player,\n      timer: timers[player.name],\n      toggleTimer: toggleTimer\n    }, player.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"warning\",\n      onClick: endGame,\n      className: \"mt-3\",\n      children: \"End Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Timer, \"Zg3JNL4yGoAcxgUY1YzlPsL/9rY=\", false, function () {\n  return [useNavigate, useGame];\n});\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","Button","useNavigate","useGame","jsxDEV","_jsxDEV","Timer","_s","navigate","team","timers","setTimers","reduce","acc","player","name","seconds","isActive","toggleTimer","playerName","prevTimers","newTimers","activeTimers","Object","entries","filter","timer","length","interval","setInterval","forEach","clearInterval","endGame","playerTimesForStorage","keys","timeString","Date","toISOString","substr","localStorage","setItem","JSON","stringify","className","children","map","PlayerClock","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/jeffinvarghese/Desktop/IntraTracker/src/Timer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport \"./Timer.css\";\nimport { useNavigate } from 'react-router-dom';\nimport { useGame } from './GameContext'; // Import useGame from GameContext\n\n// Timer component to display all players' clocks\nfunction Timer() {\n  const navigate = useNavigate();\n  const { team } = useGame(); // Use the useGame hook to get the team data\n\n  const [timers, setTimers] = useState(\n    team.reduce((acc, player) => { // Initialize timers with the team from context\n      acc[player.name] = { seconds: 0, isActive: false };\n      return acc;\n    }, {})\n  );\n\n  const toggleTimer = (playerName) => {\n    setTimers(prevTimers => {\n      const isActive = !prevTimers[playerName].isActive;\n      const newTimers = {\n        ...prevTimers,\n        [playerName]: { ...prevTimers[playerName], isActive }\n      };\n      return newTimers;\n    });\n  };\n\n  useEffect(() => {\n    const activeTimers = Object.entries(timers).filter(([, timer]) => timer.isActive);\n    if (activeTimers.length === 0) return;\n\n    const interval = setInterval(() => {\n      setTimers(prevTimers => {\n        const newTimers = { ...prevTimers };\n        activeTimers.forEach(([playerName]) => {\n          newTimers[playerName].seconds += 1;\n        });\n        return newTimers;\n      });\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [timers]);\n\n  const endGame = () => {\n    // Save the times to localStorage\n    const playerTimesForStorage = {};\n    Object.keys(timers).forEach((playerName) => {\n      const timeString = new Date(timers[playerName].seconds * 1000).toISOString().substr(11, 8);\n      playerTimesForStorage[playerName] = timeString;\n    });\n    localStorage.setItem('playerTimes', JSON.stringify(playerTimesForStorage));\n    navigate('/endGame');\n  };\n\n  return (\n    <div className=\"timer\">\n      {team.map(player => ( // Render player clocks based on the team from context\n        <PlayerClock key={player.name} player={player} timer={timers[player.name]} toggleTimer={toggleTimer} />\n      ))}\n      <Button variant=\"warning\" onClick={endGame} className=\"mt-3\">End Game</Button>\n    </div>\n  );\n}\n\nexport default Timer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}