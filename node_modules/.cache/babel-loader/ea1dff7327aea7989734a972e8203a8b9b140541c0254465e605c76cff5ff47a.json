{"ast":null,"code":"var _jsxFileName = \"/Users/jeffinvarghese/Desktop/IntraTracker/src/EditTime.js\",\n  _s = $RefreshSig$();\n// In EditTime.js\nimport React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { Button, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditTime() {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    playerTimes,\n    gameId\n  } = location.state; // Destructure gameId and playerTimes\n  const [times, setTimes] = useState(playerTimes);\n  const handleTimeChange = (name, newTime) => {\n    setTimes(prevTimes => ({\n      ...prevTimes,\n      [name]: newTime\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    let savedGames = JSON.parse(localStorage.getItem('savedGames')) || [];\n    let gameExists = false;\n    const updatedGames = savedGames.map(game => {\n      if (game.id === gameId) {\n        gameExists = true;\n        return {\n          ...game,\n          playerTimes: times\n        };\n      }\n      return game;\n    });\n\n    // If the game does not exist in saved games, add it.\n    if (!gameExists) {\n      updatedGames.push({\n        id: gameId,\n        gameName: \"Unnamed Game\",\n        playerTimes: times\n      });\n    }\n    localStorage.setItem('savedGames', JSON.stringify(updatedGames));\n    alert(\"Changes saved successfully!\");\n    navigate('/previous-games'); // Navigate to the Previous Games page or wherever appropriate\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-time\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Player Times\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [Object.entries(times).map(([name, time]) => /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [name, \"'s Time:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          defaultValue: time,\n          onChange: e => handleTimeChange(name, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)]\n      }, name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"secondary\",\n      onClick: () => navigate(-1),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(EditTime, \"MTRpcA81hcxJePAY1MEknKkYrqA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = EditTime;\nexport default EditTime;\nvar _c;\n$RefreshReg$(_c, \"EditTime\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","Button","Form","jsxDEV","_jsxDEV","EditTime","_s","navigate","location","playerTimes","gameId","state","times","setTimes","handleTimeChange","name","newTime","prevTimes","handleSubmit","e","preventDefault","savedGames","JSON","parse","localStorage","getItem","gameExists","updatedGames","map","game","id","push","gameName","setItem","stringify","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Object","entries","time","Group","Label","Control","type","defaultValue","onChange","target","value","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/jeffinvarghese/Desktop/IntraTracker/src/EditTime.js"],"sourcesContent":["// In EditTime.js\nimport React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { Button, Form } from 'react-bootstrap';\n\nfunction EditTime() {\n    const navigate = useNavigate();\n    const location = useLocation();\n    const { playerTimes, gameId } = location.state; // Destructure gameId and playerTimes\n    const [times, setTimes] = useState(playerTimes);\n\n    const handleTimeChange = (name, newTime) => {\n        setTimes(prevTimes => ({ ...prevTimes, [name]: newTime }));\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        let savedGames = JSON.parse(localStorage.getItem('savedGames')) || [];\n        let gameExists = false;\n    \n        const updatedGames = savedGames.map(game => {\n            if (game.id === gameId) {\n                gameExists = true;\n                return { ...game, playerTimes: times };\n            }\n            return game;\n        });\n    \n        // If the game does not exist in saved games, add it.\n        if (!gameExists) {\n            updatedGames.push({ id: gameId, gameName: \"Unnamed Game\", playerTimes: times });\n        }\n    \n        localStorage.setItem('savedGames', JSON.stringify(updatedGames));\n        alert(\"Changes saved successfully!\");\n        navigate('/previous-games'); // Navigate to the Previous Games page or wherever appropriate\n    };\n    \n\n    return (\n        <div className=\"edit-time\">\n            <h2>Edit Player Times</h2>\n            <Form onSubmit={handleSubmit}>\n                {Object.entries(times).map(([name, time]) => (\n                    <Form.Group key={name} className=\"mb-3\">\n                        <Form.Label>{name}'s Time:</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            defaultValue={time}\n                            onChange={(e) => handleTimeChange(name, e.target.value)}\n                        />\n                    </Form.Group>\n                ))}\n                <Button type=\"submit\" variant=\"primary\">Save Changes</Button>\n            </Form>\n            <Button variant=\"secondary\" onClick={() => navigate(-1)}>Back</Button>\n        </div>\n    );\n}\n\nexport default EditTime;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}