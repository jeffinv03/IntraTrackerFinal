{"ast":null,"code":"var _jsxFileName = \"/Users/jeffinvarghese/Desktop/IntraTracker/src/Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { useGame } from './GameContext';\nimport \"./Timer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerClock = ({\n  player,\n  timer,\n  toggleTimer\n}) => {\n  // Generate initials from first and last names\n  const initials = `${player.name.charAt(0)}${player.lastName ? player.lastName.charAt(0) : ''}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-clock\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"name circle\",\n      children: initials\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: new Date(timer.seconds * 1000).toISOString().substr(11, 8)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: timer.isActive ? 'danger' : 'success',\n      onClick: () => toggleTimer(player.name),\n      children: timer.isActive ? 'Pause' : 'Start'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = PlayerClock;\nfunction Timer() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    gameTeam\n  } = useGame();\n  const [timers, setTimers] = useState(gameTeam.reduce((acc, player) => {\n    acc[player.name] = {\n      seconds: 0,\n      isActive: false\n    };\n    return acc;\n  }, {}));\n  const [gameClock, setGameClock] = useState({\n    seconds: 0,\n    isActive: false\n  });\n  const toggleGameClock = () => {\n    setGameClock(prevGameClock => {\n      const newActiveState = !prevGameClock.isActive;\n      if (!newActiveState) {\n        // If we are pausing the game clock\n        // Pause all player timers\n        setTimers(prevTimers => {\n          const newTimers = {\n            ...prevTimers\n          };\n          for (const key of Object.keys(newTimers)) {\n            newTimers[key] = {\n              ...newTimers[key],\n              isActive: false\n            };\n          }\n          return newTimers;\n        });\n      }\n      return {\n        ...prevGameClock,\n        isActive: newActiveState\n      };\n    });\n  };\n  const toggleTimer = playerName => {\n    if (!gameClock.isActive) {\n      alert(\"Game Clock is Paused, Start game clock to start Player Timer!\");\n      return;\n    }\n    setTimers(prevTimers => {\n      const isActive = !prevTimers[playerName].isActive;\n      const newTimers = {\n        ...prevTimers,\n        [playerName]: {\n          ...prevTimers[playerName],\n          isActive\n        }\n      };\n      return newTimers;\n    });\n  };\n  useEffect(() => {\n    const interval = setInterval(() => {\n      let updatedTimers = {\n        ...timers\n      };\n      if (gameClock.isActive) {\n        setGameClock(prevGameClock => ({\n          ...prevGameClock,\n          seconds: prevGameClock.seconds + 1\n        }));\n      }\n      for (const [playerName, timer] of Object.entries(timers)) {\n        if (timer.isActive) {\n          updatedTimers[playerName].seconds = timer.seconds + 1;\n        }\n      }\n      setTimers(updatedTimers);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [gameClock, timers]);\n  const endGame = () => {\n    const playerTimesForStorage = {};\n    Object.keys(timers).forEach(playerName => {\n      const timeString = new Date(timers[playerName].seconds * 1000).toISOString().substr(11, 8);\n      playerTimesForStorage[playerName] = timeString;\n    });\n    localStorage.setItem('playerTimes', JSON.stringify(playerTimesForStorage));\n    navigate('/endGame');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-clock\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: new Date(gameClock.seconds * 1000).toISOString().substr(11, 8)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: gameClock.isActive ? 'danger' : 'success',\n        onClick: toggleGameClock,\n        children: gameClock.isActive ? 'Pause Game' : 'Start Game'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-center\",\n      children: \"Player Times:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), gameTeam.map(player => /*#__PURE__*/_jsxDEV(PlayerClock, {\n      player: player,\n      timer: timers[player.name],\n      toggleTimer: toggleTimer\n    }, player.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"warning\",\n      onClick: endGame,\n      className: \"mt-3\",\n      children: \"End Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(Timer, \"FbHytzqjtS/YyUVck0zvGmR9u7k=\", false, function () {\n  return [useNavigate, useGame];\n});\n_c2 = Timer;\nexport default Timer;\nvar _c, _c2;\n$RefreshReg$(_c, \"PlayerClock\");\n$RefreshReg$(_c2, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","Button","useNavigate","useGame","jsxDEV","_jsxDEV","PlayerClock","player","timer","toggleTimer","initials","name","charAt","lastName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Date","seconds","toISOString","substr","variant","isActive","onClick","_c","Timer","_s","navigate","gameTeam","timers","setTimers","reduce","acc","gameClock","setGameClock","toggleGameClock","prevGameClock","newActiveState","prevTimers","newTimers","key","Object","keys","playerName","alert","interval","setInterval","updatedTimers","entries","clearInterval","endGame","playerTimesForStorage","forEach","timeString","localStorage","setItem","JSON","stringify","map","_c2","$RefreshReg$"],"sources":["/Users/jeffinvarghese/Desktop/IntraTracker/src/Timer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { useGame } from './GameContext';\n\nimport \"./Timer.css\";\n\nconst PlayerClock = ({ player, timer, toggleTimer }) => {\n  // Generate initials from first and last names\n  const initials = `${player.name.charAt(0)}${player.lastName ? player.lastName.charAt(0) : ''}`;\n\n  return (\n    <div className=\"player-clock\">\n      <h3 className=\"name circle\">{initials}</h3>\n      <h3>{new Date(timer.seconds * 1000).toISOString().substr(11, 8)}</h3>\n      <Button variant={timer.isActive ? 'danger' : 'success'} onClick={() => toggleTimer(player.name)}>\n        {timer.isActive ? 'Pause' : 'Start'}\n      </Button>\n    </div>\n  );\n};\n\n\nfunction Timer() {\n  const navigate = useNavigate();\n  const { gameTeam } = useGame();\n\n  const [timers, setTimers] = useState(\n    gameTeam.reduce((acc, player) => {\n      acc[player.name] = { seconds: 0, isActive: false };\n      return acc;\n    }, {})\n  );\n\n  const [gameClock, setGameClock] = useState({ seconds: 0, isActive: false });\n\n  const toggleGameClock = () => {\n    setGameClock(prevGameClock => {\n        const newActiveState = !prevGameClock.isActive;\n        if (!newActiveState) { // If we are pausing the game clock\n            // Pause all player timers\n            setTimers(prevTimers => {\n                const newTimers = { ...prevTimers };\n                for (const key of Object.keys(newTimers)) {\n                    newTimers[key] = { ...newTimers[key], isActive: false };\n                }\n                return newTimers;\n            });\n        }\n        return { ...prevGameClock, isActive: newActiveState };\n    });\n  };\n\n\n  const toggleTimer = (playerName) => {\n    if (!gameClock.isActive) {\n      alert(\"Game Clock is Paused, Start game clock to start Player Timer!\");\n      return;\n    }\n    setTimers(prevTimers => {\n      const isActive = !prevTimers[playerName].isActive;\n      const newTimers = {\n        ...prevTimers,\n        [playerName]: { ...prevTimers[playerName], isActive }\n      };\n      return newTimers;\n    });\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      let updatedTimers = {...timers};\n\n      if (gameClock.isActive) {\n        setGameClock(prevGameClock => ({\n          ...prevGameClock,\n          seconds: prevGameClock.seconds + 1\n        }));\n      }\n\n      for (const [playerName, timer] of Object.entries(timers)) {\n        if (timer.isActive) {\n          updatedTimers[playerName].seconds = timer.seconds + 1;\n        }\n      }\n      \n      setTimers(updatedTimers);\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [gameClock, timers]);\n\n  const endGame = () => {\n    const playerTimesForStorage = {};\n    Object.keys(timers).forEach(playerName => {\n      const timeString = new Date(timers[playerName].seconds * 1000).toISOString().substr(11, 8);\n      playerTimesForStorage[playerName] = timeString;\n    });\n    localStorage.setItem('playerTimes', JSON.stringify(playerTimesForStorage));\n    navigate('/endGame');\n  };\n\n  return (\n    <div className=\"timer\">\n      <div className=\"game-clock\">\n        <h3>{new Date(gameClock.seconds * 1000).toISOString().substr(11, 8)}</h3>\n        <Button variant={gameClock.isActive ? 'danger' : 'success'} onClick={toggleGameClock}>\n          {gameClock.isActive ? 'Pause Game' : 'Start Game'}\n        </Button>\n      </div>\n      <h3 className=\"text-center\">Player Times:</h3>\n      {gameTeam.map(player => (\n        <PlayerClock key={player.name} player={player} timer={timers[player.name]} toggleTimer={toggleTimer} />\n      ))}\n      <Button variant=\"warning\" onClick={endGame} className=\"mt-3\">End Game</Button>\n    </div>\n  );\n}\n\nexport default Timer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}