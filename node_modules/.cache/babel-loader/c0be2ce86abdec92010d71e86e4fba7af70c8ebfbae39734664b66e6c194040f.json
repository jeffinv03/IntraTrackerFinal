{"ast":null,"code":"var _jsxFileName = \"/Users/jeffinvarghese/Desktop/IntraTracker/src/Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { useGame } from './GameContext';\nimport \"./Timer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerClock = ({\n  player,\n  timer,\n  toggleTimer\n}) => {\n  // Generate initials from first and last names\n  const initials = `${player.name.charAt(0)}${player.lastName ? player.lastName.charAt(0) : ''}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-clock\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: `name circle ${timer.isActive ? 'active' : 'inactive'}`,\n      children: initials\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: player.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: new Date(timer.seconds * 1000).toISOString().substr(11, 8)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: timer.isActive ? 'danger' : 'success',\n      onClick: () => toggleTimer(player.name),\n      children: timer.isActive ? 'Pause' : 'Start'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = PlayerClock;\nfunction Timer() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    gameTeam\n  } = useGame();\n  const [timers, setTimers] = useState(gameTeam.reduce((acc, player) => ({\n    ...acc,\n    [player.name]: {\n      seconds: 0,\n      isActive: false\n    }\n  }), {}));\n  const [gameClock, setGameClock] = useState({\n    seconds: 0,\n    isActive: false\n  });\n  const [showModal, setShowModal] = useState(false); // State to control the visibility of the modal\n\n  const handleBeforeUnload = event => {\n    event.preventDefault();\n    setShowModal(true); // Show the modal instead of using the default browser dialog\n    return false; // Required for some older browsers\n  };\n  useEffect(() => {\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, []);\n  const toggleGameClock = () => {\n    setGameClock(prevGameClock => {\n      const newActiveState = !prevGameClock.isActive;\n      if (!newActiveState) {\n        // If we are pausing the game clock\n        // Pause all player timers\n        setTimers(prevTimers => {\n          const newTimers = {\n            ...prevTimers\n          };\n          for (const key of Object.keys(newTimers)) {\n            newTimers[key] = {\n              ...newTimers[key],\n              isActive: false\n            };\n          }\n          return newTimers;\n        });\n      }\n      return {\n        ...prevGameClock,\n        isActive: newActiveState\n      };\n    });\n  };\n  const toggleTimer = playerName => {\n    if (!gameClock.isActive) {\n      alert(\"Game Clock is Paused, Start game clock to start Player Timer!\");\n      return;\n    }\n    setTimers(prevTimers => {\n      const isActive = !prevTimers[playerName].isActive;\n      const newTimers = {\n        ...prevTimers,\n        [playerName]: {\n          ...prevTimers[playerName],\n          isActive\n        }\n      };\n      return newTimers;\n    });\n  };\n  useEffect(() => {\n    const interval = setInterval(() => {\n      let updatedTimers = {\n        ...timers\n      };\n      if (gameClock.isActive) {\n        setGameClock(prevGameClock => ({\n          ...prevGameClock,\n          seconds: prevGameClock.seconds + 1\n        }));\n      }\n      for (const [playerName, timer] of Object.entries(timers)) {\n        if (timer.isActive) {\n          updatedTimers[playerName].seconds = timer.seconds + 1;\n        }\n      }\n      setTimers(updatedTimers);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [gameClock, timers]);\n  const endGame = () => {\n    const playerTimesForStorage = {};\n    Object.keys(timers).forEach(playerName => {\n      const timeString = new Date(timers[playerName].seconds * 1000).toISOString().substr(11, 8);\n      playerTimesForStorage[playerName] = timeString;\n    });\n    localStorage.setItem('playerTimes', JSON.stringify(playerTimesForStorage));\n    navigate('/endGame');\n  };\n  const closeModal = () => {\n    setShowModal(false);\n  };\n  const confirmEndGame = () => {\n    closeModal();\n    endGame(); // This will trigger the end game logic\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer\",\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: closeModal,\n      backdrop: \"static\",\n      keyboard: false,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Confirm Navigation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Are you sure you want to click away? Timer will stop and you will lose your progress!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: closeModal,\n          children: \"Stay on Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: confirmEndGame,\n          children: \"End Timer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s(Timer, \"PbDbNIwz7v/be0kHGzg/sLp/oUM=\", false, function () {\n  return [useNavigate, useGame];\n});\n_c2 = Timer;\nexport default Timer;\nvar _c, _c2;\n$RefreshReg$(_c, \"PlayerClock\");\n$RefreshReg$(_c2, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","Button","useNavigate","useGame","jsxDEV","_jsxDEV","PlayerClock","player","timer","toggleTimer","initials","name","charAt","lastName","className","children","isActive","fileName","_jsxFileName","lineNumber","columnNumber","Date","seconds","toISOString","substr","variant","onClick","_c","Timer","_s","navigate","gameTeam","timers","setTimers","reduce","acc","gameClock","setGameClock","showModal","setShowModal","handleBeforeUnload","event","preventDefault","window","addEventListener","removeEventListener","toggleGameClock","prevGameClock","newActiveState","prevTimers","newTimers","key","Object","keys","playerName","alert","interval","setInterval","updatedTimers","entries","clearInterval","endGame","playerTimesForStorage","forEach","timeString","localStorage","setItem","JSON","stringify","closeModal","confirmEndGame","Modal","show","onHide","backdrop","keyboard","Header","closeButton","Title","Body","Footer","_c2","$RefreshReg$"],"sources":["/Users/jeffinvarghese/Desktop/IntraTracker/src/Timer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { useGame } from './GameContext';\n\nimport \"./Timer.css\";\n\nconst PlayerClock = ({ player, timer, toggleTimer }) => {\n  // Generate initials from first and last names\n  const initials = `${player.name.charAt(0)}${player.lastName ? player.lastName.charAt(0) : ''}`;\n\n  return (\n    <div className=\"player-clock\">\n      <h3 className={`name circle ${timer.isActive ? 'active' : 'inactive'}`}>{initials}</h3>\n      <h5>{player.name}</h5>\n      <h3>{new Date(timer.seconds * 1000).toISOString().substr(11, 8)}</h3>\n      <Button variant={timer.isActive ? 'danger' : 'success'} onClick={() => toggleTimer(player.name)}>\n        {timer.isActive ? 'Pause' : 'Start'}\n      </Button>\n    </div>\n  );\n};\n\n\nfunction Timer() {\n  const navigate = useNavigate();\n  const { gameTeam } = useGame();\n  const [timers, setTimers] = useState(\n    gameTeam.reduce((acc, player) => ({ ...acc, [player.name]: { seconds: 0, isActive: false } }), {})\n  );\n  const [gameClock, setGameClock] = useState({ seconds: 0, isActive: false });\n  const [showModal, setShowModal] = useState(false);  // State to control the visibility of the modal\n\n  const handleBeforeUnload = (event) => {\n    event.preventDefault();\n    setShowModal(true);  // Show the modal instead of using the default browser dialog\n    return false;  // Required for some older browsers\n  };\n\n  useEffect(() => {\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, []);\n  \n  const toggleGameClock = () => {\n    setGameClock(prevGameClock => {\n        const newActiveState = !prevGameClock.isActive;\n        if (!newActiveState) { // If we are pausing the game clock\n            // Pause all player timers\n            setTimers(prevTimers => {\n                const newTimers = { ...prevTimers };\n                for (const key of Object.keys(newTimers)) {\n                    newTimers[key] = { ...newTimers[key], isActive: false };\n                }\n                return newTimers;\n            });\n        }\n        return { ...prevGameClock, isActive: newActiveState };\n    });\n  };\n\n\n  const toggleTimer = (playerName) => {\n    if (!gameClock.isActive) {\n      alert(\"Game Clock is Paused, Start game clock to start Player Timer!\");\n      return;\n    }\n    setTimers(prevTimers => {\n      const isActive = !prevTimers[playerName].isActive;\n      const newTimers = {\n        ...prevTimers,\n        [playerName]: { ...prevTimers[playerName], isActive }\n      };\n      return newTimers;\n    });\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      let updatedTimers = {...timers};\n\n      if (gameClock.isActive) {\n        setGameClock(prevGameClock => ({\n          ...prevGameClock,\n          seconds: prevGameClock.seconds + 1\n        }));\n      }\n\n      for (const [playerName, timer] of Object.entries(timers)) {\n        if (timer.isActive) {\n          updatedTimers[playerName].seconds = timer.seconds + 1;\n        }\n      }\n      \n      setTimers(updatedTimers);\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [gameClock, timers]);\n\n  const endGame = () => {\n    const playerTimesForStorage = {};\n    Object.keys(timers).forEach(playerName => {\n      const timeString = new Date(timers[playerName].seconds * 1000).toISOString().substr(11, 8);\n      playerTimesForStorage[playerName] = timeString;\n    });\n    localStorage.setItem('playerTimes', JSON.stringify(playerTimesForStorage));\n    navigate('/endGame');\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  const confirmEndGame = () => {\n    closeModal();\n    endGame();  // This will trigger the end game logic\n  };\n\n  return (\n    <div className=\"timer\">\n      {/* Existing components */}\n      <Modal show={showModal} onHide={closeModal} backdrop=\"static\" keyboard={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Confirm Navigation</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Are you sure you want to click away? Timer will stop and you will lose your progress!\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={closeModal}>\n            Stay on Page\n          </Button>\n          <Button variant=\"primary\" onClick={confirmEndGame}>\n            End Timer\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n\n}\n\nexport default Timer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}